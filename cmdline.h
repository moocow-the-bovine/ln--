/* -*- Mode: C -*-
 *
 * File: cmdline.h
 * Description: Headers for command-line parser struct gengetopt_args_info.
 *
 * File autogenerated by optgen.perl version 0.15.
 *
 */

#ifndef cmdline_h
#define cmdline_h

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * moocow: Never set PACKAGE and VERSION here.
 */

struct gengetopt_args_info {
  int verbose_flag;	 /* Print verbose output to stderr. (default=0). */
  int any_flag;	 /* create hardlinks if possible, otherwise symlinks (default) (default=0). */
  int hard_flag;	 /* create only hardlinks (default=0). */
  int symbolic_flag;	 /* create only symlinks (default=0). */
  int force_flag;	 /* remove existing destination files (default=0). */
  char * target_directory_arg;	 /* specify the DIRECTORY in which to create the links (default=NULL). */
  int no_target_directory_flag;	 /* treat LINK_NAME as a normal file always (default=0). */

  int help_given;	 /* Whether help was given */
  int version_given;	 /* Whether version was given */
  int verbose_given;	 /* Whether verbose was given */
  int any_given;	 /* Whether any was given */
  int hard_given;	 /* Whether hard was given */
  int symbolic_given;	 /* Whether symbolic was given */
  int force_given;	 /* Whether force was given */
  int target_directory_given;	 /* Whether target-directory was given */
  int no_target_directory_given;	 /* Whether no-target-directory was given */
  
  char **inputs;         /* unnamed arguments */
  unsigned inputs_num;   /* number of unnamed arguments */
};

/* read rc files (if any) and parse all command-line options in one swell foop */
int  cmdline_parser (int argc, char *const *argv, struct gengetopt_args_info *args_info);

/* instantiate defaults from environment variables: you must call this yourself! */
void cmdline_parser_envdefaults (struct gengetopt_args_info *args_info);

/* read a single rc-file */
void cmdline_parser_read_rcfile (const char *filename,
				    struct gengetopt_args_info *args_info,
				    int user_specified);

/* read a single rc-file (stream) */
void cmdline_parser_read_rc_stream (FILE *rcfile,
				       const char *filename,
				       struct gengetopt_args_info *args_info);

/* parse a single option */
int cmdline_parser_parse_option (char oshort, const char *olong, const char *val,
				    struct gengetopt_args_info *args_info);

/* print help message */
void cmdline_parser_print_help(void);

/* print version */
void cmdline_parser_print_version(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* cmdline_h */
